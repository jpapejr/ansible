- hosts: localhost
  connection: localhost
  vars:
    vms_path: "/Users/jtpape/Virtual\ Machines.localized"
    vmname: "a-new-vm"
    pw: "root-password-in-vm"
    src_vmx:  "{{ vms_path }}/Red Hat Enterprise Linux 8 64-bit.vmwarevm/Red Hat Enterprise Linux 8 64-bit.vmx"
    dest_vmx: "{{ vms_path }}/{{ vmname }}.vmwarevm/{{ vmname }}.vmx"
    dest_vmwarevm: "{{ vms_path }}/{{ vmname }}.vmwarevm"
    ansible_python_interpreter: /usr/local/bin/python3 
  tasks:

  - name: ensure psutil installed
    pip:
      name: psutil

  - name: check if vm exists
    stat:
      follow: yes
      path: "{{ dest_vmx }}"
    register: stat_result

  - name: "unregister virtual machine from RHSM"
    command: vmrun -gu root -gp {{ pw }} -T fusion runProgramInGuest "{{ dest_vmx }}" /usr/sbin/subscription-manager unregister
    ignore_errors: yes
    register: rhsm_out
    when: stat_result.stat.exists == true

  - name: "display RHSM result"
    debug:
      msg: "{{ rhsm_out }}"

  - name: "get ip address"
    command: vmrun -T fusion getGuestIPAddress "{{ dest_vmx }}" -wait
    register: ip_address

  - name: "set fact: ip"
    set_fact:
      ip: "{{ ip_address.stdout }}"

  - name: "print ip address"
    debug:
      msg: "VM IP: {{ ip_address.stdout }}, VM Cockpit http://{{ ip_address.stdout }}"

  - name: "remove vm from ssh config"
    blockinfile:
      dest: ~/.ssh/config
      marker: "# {{ vmname }} {mark} ANSIBLE MANAGED BLOCK"
      state: absent
      block: |
        Host {{ vmname }}
          HostName {{ ip }}
          User root
          Port 22
          UserKnownHostsFile /dev/null
          StrictHostKeyChecking no
          PasswordAuthentication yes
          ForwardAgent yes
          LogLevel FATAL
    when: stat_result.stat.exists == true

  - name: "halt vm"
    command: vmrun -gu root -gp {{ pw }} -T fusion stop "{{ dest_vmx }}" hard
    when: stat_result.stat.exists == true

  - name: Waits for cockpit port on VM to close active connections, don't start checking for 10 seconds
    wait_for:
      host: "{{ ip_address.stdout }}"
      port: 9090
      delay: 10
      state: drained

  - name: "Safe to delete"
    debug: 
      msg: "You can now open the VMWare Virtual Machine Library and delete the VM"

  
